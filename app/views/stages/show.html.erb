<% title @stage.name %>

<p>
  <b>Image:</b>
  <%= image_tag(image_size, :id => "clickable") if @stage.stage_image? %>
  <span class='display'></span>
</p>
<%= form_for @stage, :html => { :multipart => true } do |f| %>
<div class="field">
  <p>
    <b>Hint:</b>
</p>
<p>
    <i>
      convert :origin \( -resize '210x300^' -gravity center -crop '210x300+0+0' \) \( -matte -virtual-pixel transparent +distort Perspective '0,0 69,31 0,300 125,310 200,0 257,-10 200,300 315,279 ' \) :output
  </i>
</p>
<%= f.label :content, "Convert Code" %>
convert :origin  \( -resize '<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required', :required => 'required' %>' -gravity northwest -crop '<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>x<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>+<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>+<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>' -background transparent -extent '<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>x<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>' \) \( -resize '<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>x<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>!' \) \( -matte -virtual-pixel transparent +distort Perspective '<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> <%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %>,<%= text_field_tag 'rules[]', nil, :class=> 'composite_input', :required => 'required' %> ' \)  :output

<%= f.label :composite, "Composite Code" %>
-geometry +<%= text_field_tag 'comp[]', nil, :class=> 'content_input', :required => 'required' %>+<%= text_field_tag 'comp[]', nil, :class=> 'content_input', :required => 'required' %>
<%#= f.text_field :composite %>

<%= f.label :glare_image, "Glare Image" %>
<%= f.file_field :glare_image %>
<%= image_tag("checkmark.png") if @stage.glare_image? %>

<%= f.label :viewport, "URL2PNG viewport" %>
<%= f.text_field :viewport %>


<p>
    <label class="checkbox">
        <%= f.check_box :published %> Published?
    </label>
</p>
<p><%= f.submit "Submit", :class => "btn btn-success" %></p>
<% end %>
<p>
    <%= image_tag(@stage.output_image) if @stage.output_image? %>
</p>


<%= link_to 'Edit', edit_stage_path(@stage) %> |
<%= link_to 'Back', stages_path %>
<script type="text/javascript">
  $('#clickable').bind('click', function (e) {
      var $display = $('.display');
      var offset_t = $(this).offset().top - $(window).scrollTop();
      var offset_l = $(this).offset().left - $(window).scrollLeft();
      var x = Math.round( (e.clientX - offset_l) );
      var y = Math.round( (e.clientY - offset_t) );
      $display.text('x: ' + x + ', y: ' + y);
  });
  var rulesInfo = <%= @stage.rules.to_json.html_safe || '' %>,
     contentInfo = <%= @stage.comp_array.to_json.html_safe || '' %>;
    if (rulesInfo != null) {
      var inputs = $('.composite_input'),
          inputsLength = inputs.length;
      for (i=0; i < inputsLength; i++ ) {
        $(inputs[i]).val(rulesInfo[i]);
      }
    }
    if (contentInfo != null) {
      var content = $('.content_input'),
          contentLength = content.length;
      for (i=0; i < contentLength; i++ ) {
        $(content[i]).val(contentInfo[i]);
      }
    }
</script>
